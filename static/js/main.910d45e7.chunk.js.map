{"version":3,"sources":["trump.jpg","FrontPage.js","TweetLink.js","App.js","Question.js","DetailPage.js","Router.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FrontPage","react_default","a","createElement","style","width","height","backgroundImage","concat","image","backgroundRepeat","backgroundSize","backgroundPosition","display","alignItems","justifyContent","flexDirection","paddingTop","Link","to","textDecoration","id","React","Component","TweetLink","className","position","tweet_embed_es","this","props","options","top","borderRadius","App","src_TweetLink","Question","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","answered","answer","questions","answers","_this2","map","q","i","backgroundColor","color","marginTop","fontSize","textAlign","onClick","setState","padding","margin","renderAnswer","renderQuestions","DetailPage","index_m_default","url","src","alt","src_Question","match","params","maxWidth","renderTaxes","renderTariffs","Router","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4PC8BzBC,0LAvBP,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CACfC,MAAO,OACPC,OAAQ,qBACRC,gBAAe,OAAAC,OAAUC,IAAV,KACfC,iBAAkB,YAClBC,eAAgB,QAChBC,mBAAoB,SACpBC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,cAAe,SACfC,WAAY,KAEnBhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,GAAG,UAAUf,MAAO,CAAEgB,eAAgB,SAC/CnB,EAAAC,EAAAC,cAAA,OAAKkB,GAAG,QAAQjB,MAAO,IAAvB,yBAhBsBkB,IAAMC,oBCmBfC,mLAlBT,OAAOvB,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,YAAYrB,MAAO,CAAEsB,SAAU,aACnDzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAYN,GAAKO,KAAKC,MAAMR,GAAKS,QAAS,CAAEzB,MAAO,UACnDJ,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,GAAK,UAAYS,KAAKC,MAAMR,IAChCpB,EAAAC,EAAAC,cAAA,OACEC,MAAO,CACLsB,SAAU,WACVK,IAAK,GACL1B,MAAO,OACPC,OAAQ,oBACR0B,aAAc,GAEhBP,UAAU,0BAbEH,IAAMC,WCkBfU,mLAhBX,OACEhC,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,MAAMrB,MAAO,CAC1BS,QAAS,OACTG,cAAe,SACfF,WAAY,SACZC,eAAgB,SAChBV,MAAO,SAEPJ,EAAAC,EAAAC,cAAA,OAAKkB,GAAG,eAAR,kBACApB,EAAAC,EAAAC,cAAC+B,EAAD,CAAWb,GAAG,uBACdpB,EAAAC,EAAAC,cAAC+B,EAAD,CAAWb,GAAG,gCAZJE,8BC+DHY,cAhEX,SAAAA,EAAYN,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAT,KAAAO,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAT,KAAAS,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAb,KAAMC,KACDa,MAAQ,CACXC,UAAU,EACVC,OAAQ,MAERR,EAAKS,UAAYT,EAAKP,MAAMgB,WAAa,CACrC,YACA,oBACA,qBACA,sBACA,sBACA,sBACA,cAEJT,EAAKU,QAAUV,EAAKP,MAAMiB,SAAW,CACjC,MACA,MACA,MACA,MACA,MACA,MACA,OAtBWV,iFA0BD,IAAAW,EAAAnB,KACd,OAAO3B,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAES,QAAS,OAAQG,cAAe,MAAOD,eAAgB,iBACtEa,KAAKiB,UAAUG,IAAI,SAACC,EAAGC,GAAJ,OACjBjD,EAAAC,EAAAC,cAAA,OACIC,MAAO,CACHC,MAAO,GACPC,OAAQ,GACRO,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBoC,gBAAiB,QACjBC,MAAO,QACPC,UAAW,GACXC,SAAU,GACVC,UAAW,UAEfC,QAAU,kBAAMT,EAAKU,SAAS,CAAEd,UAAU,EAAMC,OAAQM,MAEtDD,6CAOd,OAAOhD,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEiD,UAAW,KAAzB,oBACgBzB,KAAKkB,QAAQlB,KAAKc,MAAME,QADxC,8CAMP,OAAO3C,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,MAAO,OAAQqD,QAAS,KACzCzD,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAAEuD,OAAQ,IAArB,6CACE/B,KAAKc,MAAMC,SAAWf,KAAKgC,eAAiBhC,KAAKiC,0BA5DxCvC,IAAMC,WC4DduC,0LAvDP,OAAO7D,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,4ZAGAF,EAAAC,EAAAC,cAAC4D,EAAA7D,EAAD,CAAeE,MAAO,CAClBuD,OAAQ,GACRtD,MAAO,QAEX2D,IAAI,4HACJ/D,EAAAC,EAAAC,cAAA,8FACAF,EAAAC,EAAAC,cAAA,uRAGAF,EAAAC,EAAAC,cAAA,OAAK8D,IAAI,8DAA8D7D,MAAO,CAAEuD,OAAQ,IAAMO,IAAI,KAClGjE,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,gaASJ,OAAOF,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACgE,EAAD,MAEAlE,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEiD,UAAW,KAAzB,+IAGApD,EAAAC,EAAAC,cAAA,kKAMJ,IAAMkB,EAAKO,KAAKC,MAAMuC,MAAMC,OAAOhD,GACnC,OAAOpB,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CACfS,QAAS,OACTG,cAAe,SACfF,WAAY,WAEhBb,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAYN,GAAKO,KAAKC,MAAMuC,MAAMC,OAAOhD,KACzCpB,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEuD,OAAQ,GAAIW,SAAU,IAAKjE,MAAO,OAAQQ,QAAS,OAAQG,cAAe,WAC3E,uBAAPK,EACEO,KAAK2C,cACL3C,KAAK4C,yBAlDIlD,IAAMC,WCiBhBkD,mLAVT,OAAOxE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,KACLzE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAY9E,IAClCC,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAY7C,IAClChC,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAOE,KAAK,aAAaC,UAAYhB,aAN1BxC,IAAMC,WCEPwD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASd,MACvB,2DCZNe,IAASC,OAAOnF,EAAAC,EAAAC,cAACkF,EAAD,MAAYC,SAASC,eAAe,SD2H9C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.910d45e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trump.f5c8bce4.jpg\";","import React from 'react';\nimport image from './trump.jpg'\nimport { Link } from 'react-router-dom'\nimport './App.css';\n\nclass FrontPage extends React.Component {\n    render() {\n        return <div style={{\n            width: '100%',\n            height: 'calc(100vh - 40px)',\n            backgroundImage: `url(${ image })`,\n            backgroundRepeat: 'no-repeat',\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            flexDirection: 'column',\n            paddingTop: 40\n        }}>\n\t    <Link to=\"/tweets\" style={{ textDecoration: 'none' }}>\n\t\t<div id=\"trump\" style={{\n\t\t}}>\n\t\t\tTRUMPONOMICS\n\t\t    </div>\n\t    </Link>\n        </div>\n    }\n}\n\nexport default FrontPage\n","import React from 'react'\nimport TweetEmbed from 'react-tweet-embed'\nimport { Link } from 'react-router-dom'\n\nclass TweetLink extends React.Component {\n    render() {\n      return <div className=\"tweetLink\" style={{ position: 'relative' }}>\n        <TweetEmbed id={ this.props.id } options={{ width: '100%' }} />\n        <Link to={ '/tweet/' + this.props.id }>\n          <div\n            style={{\n              position: 'absolute',\n              top: 10,\n              width: '100%',\n              height: 'calc(100% - 20px)',\n              borderRadius: 5,\n            }}\n            className=\"tweetOverlay\"\n          />\n        </Link>\n      </div>\n    }\n}\n\nexport default TweetLink\n","import React, { Component } from 'react';\nimport TweetLink from './TweetLink.js';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\" style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n      }}>\n        <div id=\"tweet_title\"> TRUMPONOMICS </div>\n        <TweetLink id=\"944308491887316992\"/>\n        <TweetLink id=\"1070110615627333632\"/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\n\nclass Question extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = { \n        answered: false,\n        answer: null,\n      }\n        this.questions = this.props.questions || [\n            '< $19,050',\n            '$19,050 - $77,400',\n            '$77,400 - $165,000',\n            '$165,000 - $315,000',\n            '$315,000 - $400,000',\n            '$400,000 - $600,000',\n            '> $600,000'\n        ]\n        this.answers = this.props.answers || [\n            '10%',\n            '12%',\n            '22%',\n            '24%',\n            '32%',\n            '35%',\n            '37%',\n        ]\n    }\n\n    renderQuestions() {\n        return <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-around', }}>\n            { this.questions.map((q, i) => (\n                <div \n                    style={{ \n                        width: 64, \n                        height: 64, \n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        backgroundColor: 'black',\n                        color: 'white',\n                        marginTop: 24,\n                        fontSize: 12,\n                        textAlign: 'center',\n                    }}\n                    onClick={ () => this.setState({ answered: true, answer: i })}\n                >\n                    { q }\n                </div>\n            )) }\n        </div>\n    }\n\n    renderAnswer() {\n        return <div style={{ marginTop: 24 }}>\n            Your family pays { this.answers[this.state.answer] } in taxes\n        </div>\n    }\n\n    render() {\n        return <div style={{ width: '100%', padding: 24 }}>\n            <h2 style={{ margin: 0 }}>What is your family’s annual income?</h2>\n            { this.state.answered ? this.renderAnswer() : this.renderQuestions() }\n        </div>\n    }\n}\n\nexport default Question  \n","import React from 'react'\nimport TweetEmbed from 'react-tweet-embed'\nimport MicrolinkCard from '@microlink/react'\nimport Question from './Question.js'\n\nclass DetailPage extends React.Component {\n    renderTariffs() {\n        return <div>\n            <h1>Tariffs</h1>\n            <div>\nThe tariffs — essentially a tax — are generally paid by importers, such as U.S. companies, who in turn pass on most or all of the costs to consumers or producers who may use Chinese materials in their products. (Technically, we should note that as a matter of demand and supply elasticities, Chinese producers will pay part of the tax if there are fewer goods sold to the United States.)\n            </div>\n            <MicrolinkCard style={{\n                margin: 16,\n                width: '100%',\n            }}\n            url=\"https://appleinsider.com/articles/18/11/30/iphones-could-cost-up-to-160-more-if-china-tariff-threat-is-followed-through\" />\n            <h2>How much extra would buying a new iPhone cost you if these tariffs were imposed?</h2>\n            <div>\nIf Trump is unable to reach a trade deal with China, tariffs could cause iPhone prices to go up by as much as $160. Trump has repeatedly urged Apple to move production to the US, but it is more likely that Apple will remain in China and pass costs on to consumers.\n            </div>\n            <img src=\"https://media1.giphy.com/media/l1J9BAp3rfL33jm0M/source.gif\" style={{ margin: 16 }} alt=\"\" />\n            <h2> More Information on Tariffs </h2>\n            <div>\nTariffs increase the price of imported goods, so consumers are more incentivised to purchase domestic goods. Protectionists believe that they can protect domestic production.\n\nAt the same times, tariffs hurt international trade. For example, if the US imposes tariffs on Chinese goods, China is likely to respond with tariffs of its own. Ultimately this reduces e\n            </div>\n        </div>\n    }\n\n    renderTaxes() {\n        return <div>\n            <h1>Taxes</h1>\n            <Question\n            />\n            <div style={{ marginTop: 16 }}>\nIncome levels rise with inflation, so more people will be subject to the highest income bracket than they were under the pre-Trump tax law.\n            </div>\n            <div>\nThe deduction for married and joint filers increases from $12,700 to $24,000, but eliminates personal exemptions.\n            </div>\n        </div>\n    }\n    render() {\n        const id = this.props.match.params.id\n        return <div style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        }}>\n        <TweetEmbed id={ this.props.match.params.id } />\n        <div style={{ margin: 24, maxWidth: 700, width: '100%', display: 'flex', flexDirection: 'column'}}>\n            { id === \"944308491887316992\" ?\n                this.renderTaxes() :\n                this.renderTariffs()\n            }\n        </div>\n    </div>\n    }\n}\n\nexport default DetailPage\n","import React from 'react'\nimport {\n  BrowserRouter,\n  Route,\n} from 'react-router-dom'\n\nimport FrontPage from './FrontPage'\nimport App from './App.js'\nimport DetailPage from './DetailPage.js'\n\nclass Router extends React.Component {\n    render() {\n      return <BrowserRouter>\n        <div>\n          <Route exact path=\"/\" component={ FrontPage } />\n          <Route path=\"/tweets\" component={ App } />\n          <Route path=\"/tweet/:id\" component={ DetailPage } />\n        </div>\n      </BrowserRouter>\n    }\n}\n\nexport default Router  \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}